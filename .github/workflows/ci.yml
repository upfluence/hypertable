name: ci

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

env:
  NODE_VERSION: '12'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '${{ env.NODE_VERSION }}'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install Dependencies
      run: yarn --prefer-offline --frozen-lockfile
    - name: Lint
      run: yarn lint:js
    - name: Run Tests
      run: yarn test:ember

  release:
    name: Release Package
    runs-on: ubuntu-20.04
    if: contains(github.ref, 'refs/tags/v')
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '${{ env.NODE_VERSION }}'
          registry-url: 'https://npm.pkg.github.com'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn --prefer-offline --frozen-lockfile
      - run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy preview app
    runs-on: ubuntu-20.04
    needs: [test]
    if: ${{ github.ref == 'refs/heads/pn/backlog-1263/filters-rendering' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: webfactory/ssh-agent@v0.5.0
      with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - uses: actions/setup-node@v1
      with:
        node-version: '${{ env.NODE_VERSION }}'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install Dependencies
      run: yarn install
      if: |
        steps.cache-dependencies.outputs.cache-hit != 'true'
    - name: Ember Build
      run: ./node_modules/ember-cli/bin/ember build --silent --environment=production
    - name: Deploy website
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist/
